<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>sqlrabb-it</artifactId>
    <groupId>sqlrabbit</groupId>
    <version>3.0</version>
    <packaging>pom</packaging>
    <name>SQL Rabbit file assembly</name>

    <properties>
        <node.install.directory>target</node.install.directory>
        <grunt.task>build</grunt.task>
    </properties>

    <build>
        <finalName>sqlrabbit</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>install-jdbc-drivers</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>net.sourceforge.jtds</groupId>
                                    <artifactId>jtds</artifactId>
                                    <version>1.3.1</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/docker/lib</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.trino</groupId>
                                    <artifactId>trino-jdbc</artifactId>
                                    <version>370</version>
                                    <type>406</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/docker/lib</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.postgresql</groupId>
                                    <artifactId>postgresql</artifactId>
                                    <version>42.1.1.jre7</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/docker/lib</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
              <artifactId>maven-resources-plugin</artifactId>
              <version>3.0.2</version>
              <executions>
                <execution>
                  <id>copy-web-resources</id>
                  <phase>validate</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${basedir}/target/docker/webroot</outputDirectory>
                    <resources>
                      <resource>
                        <directory>src/main/webroot</directory>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
                <execution>
                  <id>copy-grunt-resources</id>
                  <phase>validate</phase>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${basedir}/target</outputDirectory>
                    <resources>
                      <resource>
                        <directory>src/main/grunt</directory>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>0.0.28</version>
                <configuration>
                    <installDirectory>target</installDirectory>
                    <workingDirectory>target</workingDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>install-node-and-npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <nodeVersion>v16.9.0</nodeVersion>
                            <npmVersion>8.4.1</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm-install-webroot-dependencies</id>
                        <configuration>
                            <workingDirectory>target/docker/webroot</workingDirectory>
                        </configuration>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>npm-install-grunt-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>grunt</id>
                        <configuration>
                            <arguments>${grunt.task}</arguments>
                        </configuration>
                        <goals>
                            <goal>grunt</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
